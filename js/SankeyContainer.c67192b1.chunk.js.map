{"version":3,"sources":["components/Sankey/Sankey.tsx","utils/groupBy.ts","utils/percentageRoundingCalculation.ts","utils/sankey.ts","utils/browser.ts","hooks/useDownloadFile/useDownloadFile.ts","components/ExportButton/ExportButton.tsx","containers/DashboardContainer/DownloadTransactionReportContainer/GenerateAssesmentReport.tsx","containers/DashboardContainer/DownloadTransactionReportContainer/PendingReport.tsx","containers/DashboardContainer/DownloadTransactionReportContainer/DownloadReport.tsx","containers/DashboardContainer/DownloadTransactionReportContainer/AbortedReport.tsx","hooks/api/assesment-reports/useResetAndGenerateReport.ts","containers/DashboardContainer/DownloadTransactionReportContainer/DownloadTransactionReportContainer.tsx","hooks/api/assesment-reports/useAssmentReports.ts","hooks/api/assesment-reports/useGenerateAssessmentReport.ts","hooks/api/assesment-reports/useCancelAssessmentReport.ts","hooks/api/assesment-reports/useResetAssmentReports.ts","containers/DashboardContainer/SankeyContainer/SankeyContainer.tsx","hooks/api/dashboard/useTransactionSummaries.ts","hooks/api/common/usePutRequest/usePutRequest.ts","hooks/api/common/useAddUpdateMutation.ts","hooks/useAlerts/useAlerts.ts","components/TooltipButtonWrapper/TooltipButtonWrapper.tsx","utils/decisions.ts","components/SearchInput/SearchInput.tsx","components/MasterDetailsHeader/MasterDetailsSearchInput.tsx","components/MasterDetailsHeader/MasterDetailsHeaderLayout.tsx","hooks/api/common/usePostRequest/usePostRequest.ts","utils/dates/dateFormatter.ts","components/InfoTooltip/InfoTooltip.tsx","components/ThreeDSVersionToggle/ThreeDSVersionToggle.tsx"],"names":["am4core","am4themesAnimated","Sankey","data","sankeyDisplayValue","useEffect","chart","am4charts","links","template","states","create","properties","fillOpacity","dataFields","fromName","toName","value","nodes","nameLabel","label","truncate","adapter","add","text","target","SankeyDisplayValue","percentage","dataContext","dataItem","width","strokeWidth","strokeOpacity","colors","list","paddingTop","paddingBottom","paddingRight","paddingLeft","colorMode","dispose","p","boxShadow","data-testid","id","style","height","groupBy","arr","getKey","reduce","groups","item","val","push","compareDecimals","a","b","Math","floor","reorderArray","unorderedArray","orderedArray","getItemProperty","array","forEach","itemIndex","findIndex","orderedItem","transformedFunnel","key","version","ThreeDSVersion","One","getPre3dsDecisionDisplayValueMap","calculatePercentage","linksWithType","map","link","type","decisionTypeMap","linksByType","linkTotalByType","Object","keys","acc","sum","linksWithRoundedPercentage","diff","current","percentageLinks","sort","index","calculateLinksRoundingPercentage","groupTotal","transformData","funnels","filter","funnel","transition","from","decision","Pre3dsDecisions","Decline","transaction_count","to","step","PostAuthDecisions","Capture","source","display_source","getDecisionDisplayValue","display_target","linksGrouped","group","createLinks","incomingLinks","linksGroupedBySource","createIncomingLinks","downloadFile","fileName","href","window","URL","createObjectURL","Blob","document","createElement","setAttribute","body","appendChild","click","removeChild","useDownloadFile","url","req","useGetRequest","headers","Accept","timeout","useState","loading","setLoading","download","response","ExportIcon","styled","IconActionDocumentCsv","GenerateAssesmentReport","generateReport","onClick","PendingReport","onCancel","reportId","alignItems","mr","InfoTooltip","path","formatDownloadDate","date","formatDate","Date","DownloadIcon","IconActionDownload","theme","space","DownloadReport","onClear","hasError","setHasError","endpoints","assessmentReports","handleDownload","useCallback","disabled","AbortedReport","resetAndGenerate","useResetAndGenerateReport","onSuccess","resetRequest","usePostRequest","generateRequest","useMutation","throwOnError","DownloadTransactionReportContainer","useMerchants","selectedMerchant","isPending","setIsPending","queryOptions","useQuery","refetchInterval","enabled","status","isError","useAssessmentReports","refetch","queryOpts","opts","useAddUpdateMutation","generateAssementReport","useCancelAssessmentReport","cancelReport","useResetAssessmentReport","resetReport","sankeyDisplayOptions","count","SankeyContainer","featureFlags","useFeatureFlags","useDateRange","subMonths","onDatesChanged","dateRange","formattedDateRange","formatDateRange","usePaginatedQuery","transactionSummaries","_","toDate","fromDate","queryString","useTransactionSummariesData","resolvedData","setSankeyDisplayValue","useThreeDSVersion","dataset","useMemo","i","length","hasValidTransitions","isCkoMerchant","mb","MasterDetailsHeader","DOWNLOAD_TRANSACTION_SUMMARIES","justifyContent","data-testId","initialSelectedItem","onChange","options","isFilterable","ThreeDSVersionToggle","isOutsideValidRange","isAfter","startOfTomorrow","isBefore","usePutRequest","defaultOptions","createHeaders","useHeaders","auth","useAuth","maybePath","put","logout","requestMap","post","requestType","endpoint","mutationOptions","request","useRequest","useAlerts","useContext","AlertContext","TooltipButtonWrapper","children","defaultDirection","show","setShow","onMouseEnter","onMouseLeave","convertDecisionsToActions","decisionMap","entries","pre3dsDecisionDescriptionMap","Challenge","NoPreference","FrictionlessLiability","TryExemptions","pre3ds2DecisionDisplayValueMap","pre3ds1DecisionDisplayValueMap","Two","postAuthDecisionDisplayValueMap","Flag","Void","threeDS1DecisionFilter","includes","postAuthDecisionDescriptionMap","getDecisionMap","PaymentProcessingStep","Pre3ds","displayValues","descriptions","PostAuth","decisionPriorityMap","SearchIcon","IconActionSearch","ClearButton","ClickableElement","ClearPlaceHolder","div","SearchInput","searchTerm","setSearchTerm","prefix","data-cy","px","fontSize","suffix","e","placeholder","VerticalLine","Box","props","baseLight","MasterDetailsSearchInput","totalCount","flexBasis","lineHeight","color","Number","toLocaleString","singular","plural","MasterDetailsHeaderLayout","Grid","MasterDetailsHeaderLayoutLeft","Flex","MasterDetailsHeaderLayoutRight","additionalPath","API_FORMAT","stringToDateDisplayValue","dateFormater","format","dateString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ml","display","verticalAlign","setVersion","bg","event","selectedValue"],"mappings":"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","file":"static/js/SankeyContainer.c67192b1.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Box } from '@cko/primitives';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themesAnimated from '@amcharts/amcharts4/themes/animated';\nimport { Link } from 'types/models';\nimport { SankeyDisplayValue } from 'containers/DashboardContainer/SankeyContainer/SankeyContainer';\n\nam4core.useTheme(am4themesAnimated);\n\ninterface Props {\n  data: Link[];\n  sankeyDisplayValue: SankeyDisplayValue;\n}\n\nconst Sankey: React.FunctionComponent<Props> = ({\n  data,\n  sankeyDisplayValue,\n}) => {\n  useEffect(() => {\n    let chart = am4core.create('chartdiv', am4charts.SankeyDiagram);\n    chart.data = data;\n\n    // for hover on links\n    let hoverState = chart.links.template.states.create('hover');\n    hoverState.properties.fillOpacity = 0.6;\n\n    chart.dataFields.fromName = 'display_source';\n    chart.dataFields.toName = 'display_target';\n    chart.dataFields.value = 'value';\n    chart.nodes.template.nameLabel.label.truncate = false;\n\n    // to add the % to text on tooltip when hovering on links in the sankey\n    chart.links.template.adapter.add('tooltipText', (text, target) => {\n      if (sankeyDisplayValue === SankeyDisplayValue.percentage) {\n        const dataContext = target.dataItem.dataContext as Link;\n        return `{fromName} → {toName} ${dataContext.percentage}%`;\n      }\n\n      return text;\n    });\n\n    // To prevent the smaller links to become invisible\n    chart.links.template.adapter.add('linkWidth', (width, target) => {\n      const widthTreshold = 1;\n      if (width && width <= widthTreshold) {\n        target.strokeWidth = 3;\n        target.strokeOpacity = 0.3;\n      }\n      return width;\n    });\n\n    chart.colors.list = [\n      am4core.color('#1be396'),\n      am4core.color('#83e9b4'),\n      am4core.color('#beeed2'),\n      am4core.color('#c0c4ec'),\n      am4core.color('#8b99e5'),\n      am4core.color('#4371de'),\n    ];\n\n    chart.paddingTop = 16;\n    chart.paddingBottom = 16;\n    chart.paddingRight = 80;\n    chart.paddingLeft = 16;\n\n    // default styling for sankey\n    chart.links.template.colorMode = 'gradient';\n\n    return () => chart.dispose();\n  }, [data, sankeyDisplayValue]);\n\n  return (\n    <Box p=\"16px\" boxShadow={6}>\n      <div\n        data-testid=\"sankey-graph\"\n        id=\"chartdiv\"\n        style={{ width: '100%', height: '400px' }}\n      />\n    </Box>\n  );\n};\n\nexport default Sankey;\n","export const groupBy = <T extends any>(\n  arr: T[],\n  getKey: (item: T) => string | number\n) => {\n  return arr.reduce(function (groups: Record<string, T[]>, item) {\n    const val = getKey(item);\n    groups[val] = groups[val] || [];\n    groups[val].push(item);\n    return groups;\n  }, {});\n};\n","import { Link } from 'types/models';\nimport { groupBy } from './groupBy';\n\nconst compareDecimals = (a: Link, b: Link) => {\n  return (\n    Math.floor(a.percentage) -\n    a.percentage -\n    (Math.floor(b.percentage) - b.percentage)\n  );\n};\n\nexport const calculateLinksRoundingPercentage = (links: Link[]) => {\n  const linksByType = groupBy(links, (link) => {\n    return link.type;\n  });\n\n  let linksWithRoundedPercentage: Link[] = [];\n\n  Object.keys(linksByType).forEach((key) => {\n    const links = linksByType[key];\n    const diff =\n      100 -\n      links\n        .map((link) => Math.floor(link.percentage))\n        .reduce((acc, current) => acc + current, 0);\n\n    const sortedByDecimalLinks = links.sort(compareDecimals);\n\n    const percentageLinks = sortedByDecimalLinks.map((link, index) => {\n      const percentage =\n        index < diff\n          ? Math.floor(link.percentage) + 1\n          : Math.floor(link.percentage);\n      return {\n        ...link,\n        percentage,\n      } as Link;\n    });\n\n    return (linksWithRoundedPercentage = [\n      ...linksWithRoundedPercentage,\n      ...percentageLinks,\n    ]);\n  });\n\n  return reorderArray<Link>(linksWithRoundedPercentage, links, (item) => {\n    return item.id;\n  });\n};\n\nconst reorderArray = <T extends any>(\n  unorderedArray: T[],\n  orderedArray: T[],\n  getItemProperty: (item: T) => any\n) => {\n  const array: T[] = [];\n  unorderedArray.forEach((item) => {\n    let itemIndex = orderedArray.findIndex(\n      (orderedItem) => getItemProperty(orderedItem) === getItemProperty(item)\n    );\n    if (itemIndex !== -1) {\n      array[itemIndex] = item;\n    }\n  });\n  return array;\n};\n","import {\n  FunnelsResponse,\n  Link,\n  BaseLink,\n  Pre3dsDecisions,\n  PostAuthDecisions,\n  PaymentProcessingDecisions,\n} from 'types/models';\nimport { groupBy } from './groupBy';\nimport { calculateLinksRoundingPercentage } from './percentageRoundingCalculation';\nimport {\n  decisionTypeMap,\n  getDecisionDisplayValue,\n  getPre3dsDecisionDisplayValueMap,\n} from './decisions';\nimport { ThreeDSVersion } from 'contexts/ThreeDSVersionContext/ThreeDSVersionContext';\n\nconst transformedFunnel = (\n  key: PaymentProcessingDecisions,\n  version: ThreeDSVersion\n) => {\n  if (version === ThreeDSVersion.One) {\n    return (\n      getPre3dsDecisionDisplayValueMap(version)[key as Pre3dsDecisions] ?? key\n    );\n  }\n  return key;\n};\n\nconst createIncomingLinks = (link: BaseLink[], version: ThreeDSVersion) => {\n  const linksGroupedBySource = groupBy(link, (link) => link.source);\n\n  const incomingLinks = Object.keys(linksGroupedBySource).map((key) => {\n    const group = linksGroupedBySource[key];\n\n    const value = group.reduce((a, b) => a + b.value, 0);\n    const target = transformedFunnel(\n      key as PaymentProcessingDecisions,\n      version\n    );\n\n    return {\n      source: 'incoming',\n      display_source: 'Incoming',\n      target,\n      display_target: getDecisionDisplayValue(\n        target as PaymentProcessingDecisions,\n        version\n      ),\n      // if the decision is decline we want to use transaction_count as the value\n      // as this will be the correct value for incoming -> decline\n      value:\n        target === Pre3dsDecisions.Decline\n          ? group.reduce((a, b) => a + b.transaction_count, 0)\n          : value,\n      id: `incoming_${key}`,\n    };\n  });\n\n  return incomingLinks as BaseLink[];\n};\n\nconst createLinks = (data: FunnelsResponse, version: ThreeDSVersion) => {\n  const links = data.funnels\n    .filter(\n      (funnel) =>\n        (funnel.transition.from.decision === Pre3dsDecisions.Decline &&\n          funnel.transaction_count > 0) ||\n        funnel.transition.to != null\n    )\n    .map((funnel) => {\n      const to = funnel.transition.to || {\n        step: 'post-auth',\n        decision: PostAuthDecisions.Capture,\n      };\n\n      return {\n        source: transformedFunnel(\n          funnel.transition.from.decision as PaymentProcessingDecisions,\n          version\n        ),\n        display_source: getDecisionDisplayValue(\n          transformedFunnel(\n            funnel.transition.from.decision as PaymentProcessingDecisions,\n            version\n          ) as PaymentProcessingDecisions,\n          version\n        ),\n        target: transformedFunnel(\n          to!.decision as PaymentProcessingDecisions,\n          version\n        ),\n        display_target: getDecisionDisplayValue(\n          transformedFunnel(\n            to!.decision as PaymentProcessingDecisions,\n            version\n          ) as PaymentProcessingDecisions,\n          version\n        ),\n        // if from decision is decline we want to insert an empty link between decline and capture\n        // this way the sankey link appears to be cut off after decline\n        value:\n          funnel.transition.from.decision === Pre3dsDecisions.Decline\n            ? 0\n            : funnel.transaction_count,\n        id: `${funnel.transition.from.decision}_${to!.decision}`,\n        transaction_count: funnel.transaction_count,\n      };\n    });\n\n  const linksGrouped = groupBy(links, (link) => link.source + link.target);\n\n  const incomingLinks = Object.keys(linksGrouped).map((key) => {\n    const group = linksGrouped[key];\n    return {\n      ...group[0],\n      value: group.reduce((a, b) => a + b.value, 0),\n    };\n  });\n\n  return incomingLinks as BaseLink[];\n};\n\ntype LinkWithType = BaseLink & {\n  type: string;\n};\n\nconst calculatePercentage = (links: BaseLink[]) => {\n  const linksWithType = links.map((link) => ({\n    ...link,\n    type:\n      decisionTypeMap[link.target as PaymentProcessingDecisions] || 'incoming',\n  })) as LinkWithType[];\n\n  const linksByType = groupBy(linksWithType, (link: LinkWithType) => {\n    return link.type;\n  });\n\n  const linkTotalByType = Object.keys(linksByType).reduce((acc, key) => {\n    const links = linksByType[key];\n\n    acc[key] = links.reduce((sum, link) => sum + link.value, 0);\n\n    return acc;\n  }, {} as Record<string, number>);\n\n  const linksWithPercentage = linksWithType.map((link) => {\n    const groupTotal = linkTotalByType[link.type];\n    const percentage = (link.value / groupTotal) * 100;\n\n    return { ...link, percentage } as Link;\n  });\n\n  return calculateLinksRoundingPercentage(linksWithPercentage);\n};\n\nexport const transformData = (\n  data: FunnelsResponse,\n  version: ThreeDSVersion\n) => {\n  const links = createLinks(data, version);\n\n  const incomingLinks = createIncomingLinks(links, version);\n  const linksByPercentage = calculatePercentage([...incomingLinks, ...links]);\n  return linksByPercentage;\n};\n\nexport const hasValidTransitions = (data: FunnelsResponse): boolean => {\n  for (let i = 0; i < data.funnels.length; i++) {\n    const { transition } = data.funnels[i];\n\n    if (transition.from && transition.to) {\n      return true;\n    }\n  }\n  return false;\n};\n","export const downloadFile = (data: BlobPart, fileName: string) => {\n  const href = window.URL.createObjectURL(new Blob([data]));\n  const link = document.createElement('a');\n  link.href = href;\n  link.setAttribute('download', fileName);\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n","import { useState } from 'react';\nimport { downloadFile } from 'utils/browser';\nimport useGetRequest from 'hooks/api/common/useGetRequest';\n\nconst useDownloadFile = (url: string, fileName: string) => {\n  const req = useGetRequest({\n    headers: { Accept: 'text/csv' },\n    timeout: 900000,\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const download = async () => {\n    try {\n      setLoading(true);\n      const response = await req(url);\n      downloadFile(response as BlobPart, fileName);\n    } catch (e) {\n      throw e;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { loading, download };\n};\n\nexport default useDownloadFile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IconActionDocumentCsv } from '@cko/icons';\nimport { OutlineButton } from '@cko/primitives';\n\nimport useAlerts from 'hooks/useAlerts';\nimport useDownloadFile from 'hooks/useDownloadFile';\n\nexport const ExportIcon = styled(IconActionDocumentCsv)`\n  margin-right: 5px;\n  font-size: 16px;\n  vertical-align: text-bottom;\n`;\n\ninterface Props {\n  url: string;\n  fileName: string;\n}\n\nconst ExportButton: React.FunctionComponent<Props> = ({ url, fileName }) => {\n  const { download, loading } = useDownloadFile(url, fileName);\n  const { showAlert } = useAlerts();\n\n  return (\n    <OutlineButton\n      disabled={loading}\n      onClick={async () => {\n        try {\n          await download();\n        } catch (e) {\n          showAlert(`Error exporting data`, {\n            type: 'alert',\n          });\n        }\n      }}\n      data-cy=\"export-button\"\n    >\n      <ExportIcon />\n      {loading ? 'Exporting' : 'Export'}\n    </OutlineButton>\n  );\n};\n\nexport default ExportButton;\n","import React from 'react';\nimport { OutlineButton } from '@cko/primitives';\nimport { ExportIcon } from 'components/ExportButton/ExportButton';\n\ninterface Props {\n  generateReport: () => void;\n}\n\nconst GenerateAssesmentReport: React.FC<Props> = ({ generateReport }) => {\n  return (\n    <OutlineButton onClick={generateReport}>\n      <ExportIcon />\n      Generate report\n    </OutlineButton>\n  );\n};\n\nexport default GenerateAssesmentReport;\n","import React from 'react';\nimport InfoTooltip from 'components/InfoTooltip';\nimport { Text, Flex, Box, AlertButton } from '@cko/primitives';\nimport { MutateFunction } from 'react-query';\nimport { AxiosError } from 'axios';\n\ninterface Props {\n  onCancel: MutateFunction<\n    {},\n    AxiosError<{}>,\n    {\n      data: {};\n      path?: string | undefined;\n    },\n    unknown\n  >;\n  reportId: string;\n}\n\nconst PendingReport: React.FunctionComponent<Props> = ({\n  onCancel,\n  reportId,\n}) => {\n  const handleCancel = () => {\n    onCancel({ data: {}, path: `${reportId}/cancel` });\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      <Box mr={2}>\n        <InfoTooltip text=\"This can take a few minutes, you may navigate away from this page and your report will be ready when you return.\" />\n      </Box>\n      <Box mr={2}>\n        <Text>Report being generated</Text>\n      </Box>\n      <AlertButton onClick={handleCancel}>Cancel</AlertButton>\n    </Flex>\n  );\n};\n\nexport default PendingReport;\n","import React, { useCallback, useState } from 'react';\nimport { IconActionDownload } from '@cko/icons';\nimport { formatDate } from 'utils/dates/dateFormatter';\nimport styled from 'styled-components';\nimport {\n  PrimaryButton,\n  Flex,\n  InlineNotification,\n  Box,\n  OutlineButton,\n} from '@cko/primitives';\nimport useDownloadFile from 'hooks/useDownloadFile';\nimport endpoints from 'api/endpoints';\nimport { MutateFunction } from 'react-query';\nimport { AxiosError } from 'axios';\n\ninterface Props {\n  from: string;\n  to: string;\n  reportId: string;\n  onClear: MutateFunction<\n    {},\n    AxiosError<{}>,\n    {\n      data: {};\n      path?: string | undefined;\n    },\n    unknown\n  >;\n}\n\nconst formatDownloadDate = (date: string) => {\n  return formatDate(new Date(date), 'dd MMM yyyy');\n};\n\nconst DownloadIcon = styled(IconActionDownload)`\n  margin-right: ${({ theme }) => theme.space[2]};\n\n  & > g {\n    fill: currentColor;\n  }\n`;\n\nconst DownloadReport: React.FunctionComponent<Props> = ({\n  from,\n  to,\n  reportId,\n  onClear,\n}) => {\n  const [hasError, setHasError] = useState(false);\n\n  const { download, loading } = useDownloadFile(\n    `${endpoints.assessmentReports}/${reportId}/download`,\n    `prism-report-${formatDate(new Date(from))}-${formatDate(new Date(to))}.csv`\n  );\n\n  const handleDownload = useCallback(async () => {\n    try {\n      setHasError(false);\n      await download();\n    } catch {\n      setHasError(true);\n    }\n  }, [download]);\n\n  const handleReset = () => {\n    onClear({ path: `${reportId}/reset`, data: {} });\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      {hasError && (\n        <Box mr={2}>\n          <InlineNotification type=\"alert\">\n            Sorry, there was an error downloading your report. Please try again.\n          </InlineNotification>\n        </Box>\n      )}\n      <PrimaryButton onClick={handleDownload} disabled={loading}>\n        <DownloadIcon />\n        {!loading\n          ? `Download report: ${formatDownloadDate(\n              from\n            )} - ${formatDownloadDate(to)}`\n          : 'Downloading...'}\n      </PrimaryButton>\n      <OutlineButton onClick={handleReset}>Clear</OutlineButton>\n    </Flex>\n  );\n};\n\nexport default DownloadReport;\n","import React from 'react';\nimport { Flex, Box, InlineNotification } from '@cko/primitives';\nimport GenerateAssesmentReport from './GenerateAssesmentReport';\nimport { formatDate } from 'utils/dates/dateFormatter';\nimport { AxiosError } from 'axios';\nimport { MutateFunction } from 'react-query';\n\ninterface Props {\n  reportId: string;\n  resetAndGenerate: MutateFunction<\n    any,\n    AxiosError<any>,\n    {\n      data: {\n        from: string;\n        to: string;\n      };\n      path: string;\n    },\n    unknown\n  >;\n  from: string;\n  to: string;\n}\n\nconst AbortedReport: React.FunctionComponent<Props> = ({\n  reportId,\n  resetAndGenerate,\n  from,\n  to,\n}) => {\n  const handleResetAndGenerate = () => {\n    resetAndGenerate({\n      data: { from: formatDate(new Date(from)), to: formatDate(new Date(to)) },\n      path: `${reportId}/reset`,\n    });\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      <Box mr={2}>\n        <InlineNotification type=\"alert\">\n          Sorry, there was an error generating your report. Please try again.\n        </InlineNotification>\n      </Box>\n      <GenerateAssesmentReport generateReport={handleResetAndGenerate} />\n    </Flex>\n  );\n};\n\nexport default AbortedReport;\n","import usePostRequest from 'hooks/api/common/usePostRequest';\nimport endpoints from 'api/endpoints';\nimport { AxiosError } from 'axios';\nimport { useMutation } from 'react-query';\n\ninterface Payload {\n  from: string;\n  to: string;\n}\n\nexport const useResetAndGenerateReport = (onSuccess: () => void) => {\n  const resetRequest = usePostRequest(endpoints.assessmentReports);\n  const generateRequest = usePostRequest(endpoints.assessmentReports);\n\n  const resetAndGenerate = async ({\n    path,\n    data,\n  }: {\n    path: string;\n    data: {\n      from: string;\n      to: string;\n    };\n  }) => {\n    await resetRequest({}, path);\n    await generateRequest(data);\n  };\n\n  return useMutation<\n    any,\n    AxiosError,\n    {\n      data: Payload;\n      path: string;\n    }\n  >(({ data, path }) => resetAndGenerate({ data, path }), {\n    onSuccess,\n    throwOnError: true,\n  });\n};\n","import React, { useEffect } from 'react';\nimport { Box } from '@cko/primitives';\nimport GenerateAssesmentReport from './GenerateAssesmentReport';\nimport PendingReport from './PendingReport';\nimport DownloadReport from './DownloadReport';\nimport AbortedReport from './AbortedReport';\nimport {\n  useGenerateAssessmentReport,\n  useAssessmentReports,\n  useCancelAssessmentReport,\n  useResetAssessmentReport,\n  useResetAndGenerateReport,\n} from 'hooks/api/assesment-reports';\nimport { formatDate } from 'utils/dates/dateFormatter';\nimport useMerchants from 'hooks/useMerchants';\n\ninterface Props {\n  from: Date;\n  to: Date;\n}\n\nconst DownloadTransactionReportContainer: React.FC<Props> = ({ from, to }) => {\n  const [{ selectedMerchant }] = useMerchants();\n\n  const { data, refetch } = useAssessmentReports();\n\n  const queryOpts = {\n    onSuccess: () => {\n      refetch();\n    },\n  };\n\n  useEffect(() => {\n    refetch();\n  }, [selectedMerchant, refetch]);\n\n  const [generateAssementReport] = useGenerateAssessmentReport(queryOpts);\n  const [cancelReport] = useCancelAssessmentReport(queryOpts);\n  const [resetReport] = useResetAssessmentReport(queryOpts);\n  const [resetAndGenerate] = useResetAndGenerateReport(queryOpts.onSuccess);\n\n  if (!data) {\n    return null;\n  }\n\n  const generateReport = () => {\n    generateAssementReport({\n      data: { from: formatDate(from), to: formatDate(to) },\n    });\n  };\n\n  return (\n    <Box>\n      {data.status === 'Initial' && (\n        <GenerateAssesmentReport generateReport={generateReport} />\n      )}\n      {data.status === 'Pending' && (\n        <PendingReport onCancel={cancelReport} reportId={data.id} />\n      )}\n      {data.status === 'Completed' && (\n        <DownloadReport\n          from={data.from}\n          to={data.to}\n          reportId={data.id}\n          onClear={resetReport}\n        />\n      )}\n      {data.status === 'Aborted' && (\n        <AbortedReport\n          reportId={data.id}\n          from={data.from}\n          to={data.to}\n          resetAndGenerate={resetAndGenerate}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default DownloadTransactionReportContainer;\n","import { useEffect, useState } from 'react';\nimport useGetRequest from 'hooks/api/common/useGetRequest';\nimport { useQuery } from 'react-query';\nimport { AssessmentReportsResponse } from 'types/models';\nimport endpoints from 'api/endpoints';\n\nexport const useAssessmentReports = () => {\n  const req = useGetRequest();\n  const [isPending, setIsPending] = useState<boolean | null>(null);\n\n  const queryOptions = useQuery<AssessmentReportsResponse>(\n    endpoints.assessmentReports,\n    () => req<AssessmentReportsResponse>(endpoints.assessmentReports),\n    {\n      refetchInterval: 1000,\n      enabled: isPending === null || isPending,\n    }\n  );\n\n  useEffect(() => {\n    if (queryOptions.data) {\n      setIsPending(queryOptions.data.status === 'Pending');\n    } else if (queryOptions.isError) {\n      setIsPending(false);\n    }\n  }, [queryOptions]);\n\n  return queryOptions;\n};\n","import { useAddUpdateMutation } from 'hooks/api/common/useAddUpdateMutation';\nimport endpoints from 'api/endpoints';\nimport { AxiosError } from 'axios';\nimport { MutateConfig } from 'react-query';\n\ninterface Payload {\n  from: string;\n  to: string;\n}\n\nexport const useGenerateAssessmentReport = (\n  opts: MutateConfig<{}, AxiosError<{}>, { data: Payload; path?: string }>\n) => {\n  return useAddUpdateMutation<Payload>(\n    'post',\n    endpoints.assessmentReports,\n    opts\n  );\n};\n","import { useAddUpdateMutation } from 'hooks/api/common/useAddUpdateMutation';\nimport endpoints from 'api/endpoints';\nimport { AxiosError } from 'axios';\nimport { MutateConfig } from 'react-query';\n\nexport const useCancelAssessmentReport = (\n  opts: MutateConfig<{}, AxiosError<{}>, { data: {}; path?: string }>\n) => {\n  return useAddUpdateMutation('post', endpoints.assessmentReports, opts);\n};\n","import { useAddUpdateMutation } from 'hooks/api/common/useAddUpdateMutation';\nimport endpoints from 'api/endpoints';\nimport { AxiosError } from 'axios';\nimport { MutateConfig } from 'react-query';\n\nexport const useResetAssessmentReport = (\n  opts: MutateConfig<{}, AxiosError<{}>, { data: {}; path?: string }>\n) => {\n  return useAddUpdateMutation('post', `${endpoints.assessmentReports}`, opts);\n};\n","import React, { useMemo, useState } from 'react';\nimport {\n  Panel,\n  Box,\n  Flex,\n  TextHeadingTwo,\n  SimpleSelectMenu,\n  FormLabel,\n  InlineNotification,\n} from '@cko/primitives';\nimport { DateRangeFilter, useDateRange } from '@cko/calendar';\nimport Sankey from 'components/Sankey/Sankey';\nimport {\n  MasterDetailsHeaderLayout,\n  MasterDetailsHeaderLayoutRight,\n} from 'components/MasterDetailsHeader';\nimport useMerchants from 'hooks/useMerchants';\nimport { subMonths, isBefore, isAfter, startOfTomorrow } from 'date-fns';\nimport { hasValidTransitions, transformData } from 'utils/sankey';\nimport { useTransactionSummariesData } from 'hooks/api/dashboard';\nimport ThreeDSVersionToggle from 'components/ThreeDSVersionToggle';\nimport { useThreeDSVersion } from 'contexts/ThreeDSVersionContext';\nimport DownloadTransactionReportContainer from './../DownloadTransactionReportContainer';\nimport { useFeatureFlags } from 'contexts/FeatureFlagsContext';\n\nexport enum SankeyDisplayValue {\n  count = 'count',\n  percentage = 'percentage',\n}\n\nconst sankeyDisplayOptions = [\n  {\n    value: SankeyDisplayValue.count,\n    label: 'Number of transactions',\n  },\n  { value: SankeyDisplayValue.percentage, label: 'Percentage of transactions' },\n];\n\nconst SankeyContainer: React.FunctionComponent = () => {\n  const { featureFlags } = useFeatureFlags();\n\n  const { from, to, onDatesChanged } = useDateRange(\n    subMonths(new Date(), 3),\n    new Date()\n  );\n\n  const { status, resolvedData } = useTransactionSummariesData({\n    from: from,\n    to: to,\n  });\n\n  const [{ selectedMerchant }] = useMerchants();\n\n  const [\n    sankeyDisplayValue,\n    setSankeyDisplayValue,\n  ] = useState<SankeyDisplayValue>(SankeyDisplayValue.count);\n\n  const { version } = useThreeDSVersion();\n\n  const dataset = useMemo(() => {\n    if (!resolvedData || !hasValidTransitions(resolvedData)) {\n      return null;\n    }\n\n    return transformData(resolvedData, version);\n  }, [version, resolvedData]);\n\n  const renderSankeyContent = () => {\n    if (status === 'loading') {\n      return (\n        <Flex height=\"400px\" alignItems=\"center\" justifyContent=\"center\">\n          <InlineNotification type=\"success\">Loading...</InlineNotification>\n        </Flex>\n      );\n    }\n\n    if (status === 'error') {\n      return (\n        <Flex height=\"400px\" alignItems=\"center\" justifyContent=\"center\">\n          <InlineNotification type=\"alert\">\n            Something went wrong, please try again later.\n          </InlineNotification>\n        </Flex>\n      );\n    }\n\n    if (dataset === null) {\n      return (\n        <Flex height=\"400px\" alignItems=\"center\" justifyContent=\"center\">\n          <InlineNotification type=\"warning\">\n            You currently do not have enough data to generate a graph.\n          </InlineNotification>\n        </Flex>\n      );\n    }\n\n    return <Sankey data={dataset} sankeyDisplayValue={sankeyDisplayValue} />;\n  };\n\n  const handleChangeSankeyValueType = (\n    item: typeof sankeyDisplayOptions[0]\n  ) => {\n    setSankeyDisplayValue(item.value);\n  };\n\n  const isCkoMerchant = selectedMerchant?.id === null;\n\n  return (\n    <>\n      <Panel p={0} mb={3}>\n        <Box boxShadow=\"focusLight.0\">\n          <MasterDetailsHeaderLayout>\n            <Flex alignItems=\"center\">\n              <TextHeadingTwo>\n                Live performance and transaction routing\n              </TextHeadingTwo>\n            </Flex>\n            <MasterDetailsHeaderLayoutRight>\n              {!isCkoMerchant &&\n                from &&\n                featureFlags.DOWNLOAD_TRANSACTION_SUMMARIES && (\n                  <DownloadTransactionReportContainer\n                    from={from}\n                    to={to || from}\n                  />\n                )}\n            </MasterDetailsHeaderLayoutRight>\n          </MasterDetailsHeaderLayout>\n        </Box>\n\n        <Flex p={3} alignItems=\"center\" justifyContent=\"space-between\">\n          <Flex>\n            <FormLabel mr={2}>View by: </FormLabel>\n\n            <SimpleSelectMenu\n              data-testId=\"select-value-type-menu\"\n              initialSelectedItem={sankeyDisplayOptions[0]}\n              onChange={handleChangeSankeyValueType}\n              options={sankeyDisplayOptions}\n              isFilterable={false}\n            />\n          </Flex>\n\n          <Flex>\n            <Box mr={3}>\n              <ThreeDSVersionToggle />\n            </Box>\n            <Box p=\"0\" width=\"285px\">\n              <DateRangeFilter\n                from={from}\n                to={to}\n                onChange={onDatesChanged}\n                isOutsideValidRange={(date: any) => {\n                  return (\n                    isAfter(date, startOfTomorrow()) ||\n                    isBefore(date, subMonths(new Date(), 3))\n                  );\n                }}\n              />\n            </Box>\n          </Flex>\n        </Flex>\n        {renderSankeyContent()}\n      </Panel>\n    </>\n  );\n};\n\nexport default SankeyContainer;\n","import { usePaginatedQuery } from 'react-query';\nimport endpoints from 'api/endpoints';\nimport useGetRequest from 'hooks/api/common/useGetRequest';\nimport { FormattedDateRange, FunnelsResponse } from 'types/models';\nimport { formatDateRange } from 'utils/dates/dateFormatter';\nimport { DateRange } from '@cko/calendar';\n\nexport const useTransactionSummariesData = (dateRange: DateRange) => {\n  const req = useGetRequest();\n  const formattedDateRange = formatDateRange(dateRange);\n  return usePaginatedQuery<FunnelsResponse, [string, FormattedDateRange]>(\n    [endpoints.transactionSummaries, formattedDateRange],\n\n    (_, { toDate, fromDate }) => {\n      const queryString =\n        fromDate && !toDate\n          ? `from=${fromDate}&to=${fromDate}`\n          : `from=${fromDate}&to=${toDate}`;\n      return req(`${endpoints.transactionSummaries}?${queryString}`);\n    },\n    {\n      enabled: !!formattedDateRange.fromDate,\n    }\n  );\n};\n","import useHeaders from '../useRequestHeaders';\nimport { put } from 'api/utils';\nimport useAuth from 'hooks/useAuth';\nimport { AxiosRequestConfig } from 'axios';\nimport { useCallback } from 'react';\n\nconst usePutRequest = <RequestType, ResponseType = {}>(\n  url: string,\n  defaultOptions: AxiosRequestConfig = {}\n) => {\n  const createHeaders = useHeaders();\n  const auth = useAuth();\n\n  const request = useCallback(\n    async (\n      data: RequestType,\n      path?: string,\n      options: AxiosRequestConfig = defaultOptions\n    ) => {\n      const headers = await createHeaders();\n\n      const maybePath = path ? `/${path}` : '';\n\n      try {\n        const response = await put<RequestType, ResponseType>(\n          `${url}${maybePath}`,\n          data,\n          {\n            ...options,\n            headers: {\n              ...headers,\n              ...(options && options.headers),\n            },\n          }\n        );\n\n        return response.data;\n      } catch (error) {\n        if (error.response.status === 401) {\n          auth.logout();\n        }\n        throw error;\n      }\n    },\n    [auth, createHeaders, defaultOptions, url]\n  );\n\n  return request;\n};\n\nexport default usePutRequest;\n","import usePutRequest from 'hooks/api/common/usePutRequest';\nimport { useMutation, MutateConfig } from 'react-query';\nimport usePostRequest from './usePostRequest';\nimport { AxiosError } from 'axios';\n\nconst requestMap = {\n  put: usePutRequest,\n  post: usePostRequest,\n};\n\nexport const useAddUpdateMutation = <RequestType, ResponseType = {}>(\n  requestType: 'post' | 'put',\n  endpoint: string,\n  mutationOptions: MutateConfig<\n    ResponseType,\n    AxiosError<ResponseType>,\n    { data: RequestType; path?: string }\n  > = {}\n) => {\n  const useRequest = requestMap[requestType];\n  const request = useRequest<RequestType, ResponseType>(endpoint);\n\n  return useMutation<\n    ResponseType,\n    AxiosError<ResponseType>,\n    { data: RequestType; path?: string }\n  >(({ data, path }) => request(data, path), {\n    ...mutationOptions,\n    throwOnError: true,\n  });\n};\n","import { AlertContext } from 'contexts/AlertProvider';\nimport { useContext } from 'react';\n\nconst useAlerts = () => {\n  return useContext(AlertContext);\n};\n\nexport default useAlerts;\n","import React, { useState } from 'react';\nimport { Tooltip } from '@cko/tooltip';\nimport { Placement } from '@popperjs/core';\nimport { Box } from '@cko/primitives';\nimport 'styled-components/macro';\n\ninterface Props {\n  text: string | undefined;\n  enabled: boolean;\n  defaultDirection?: Placement;\n}\n\nconst TooltipButtonWrapper: React.FunctionComponent<Props> = ({\n  text,\n  children,\n  enabled,\n  defaultDirection = 'top',\n}) => {\n  const [show, setShow] = useState(false);\n\n  if (!enabled || !text) return <>{children}</>;\n\n  return (\n    <Tooltip text={text} show={show} defaultDirection={defaultDirection}>\n      <Box\n        css={`\n          button {\n            pointer-events: ${enabled ? 'none' : 'auto'};\n          }\n        `}\n        onMouseEnter={() => setShow(true)}\n        onMouseLeave={() => setShow(false)}\n      >\n        {children}\n      </Box>\n    </Tooltip>\n  );\n};\n\nexport default TooltipButtonWrapper;\n","import { ThreeDSVersion } from 'contexts/ThreeDSVersionContext';\nimport {\n  Pre3dsDecisions,\n  PostAuthDecisions,\n  PaymentProcessingStep,\n  PaymentProcessingDecisions,\n} from '../types/models/index';\n\nconst convertDecisionsToActions = (decisionMap: Record<string, string>) => {\n  return Object.entries(decisionMap).map(([value, label]) => {\n    return { value: { type: 'decision', value }, label };\n  });\n};\n\nexport const pre3dsDecisionDescriptionMap: Record<Pre3dsDecisions, string> = {\n  [Pre3dsDecisions.Decline]: `Your transaction won't be processed. It will be sent neither to 3DS nor to Authorisation.`,\n  [Pre3dsDecisions.Challenge]: `Your transaction will be routed via the 3DS workflow which means that will you be covered by the liability shift (on fraudulent grounds only).`,\n  [Pre3dsDecisions.NoPreference]: `Your transaction will be routed via the 3DS workflow which means that will you be covered by the liability shift (on fraudulent grounds only).`,\n  [Pre3dsDecisions.FrictionlessLiability]: `You will be requesting the Issuer to authenticate your transaction without using any challenge, which they may or may not accept.`,\n  [Pre3dsDecisions.TryExemptions]:\n    'Whenever possible, our intelligent 3DS routing engine will select the best PSD2 exemptions to downgrade your transaction.',\n};\n\nconst pre3ds2DecisionDisplayValueMap = {\n  [Pre3dsDecisions.Decline]: 'Decline',\n  [Pre3dsDecisions.Challenge]: 'Force Challenge (liability shift)',\n  [Pre3dsDecisions.NoPreference]: 'No Preference (liability shift)',\n  [Pre3dsDecisions.FrictionlessLiability]: 'Try Frictionless (liability shift)',\n  [Pre3dsDecisions.TryExemptions]: 'Try Exemptions',\n} as const;\n\nconst pre3ds1DecisionDisplayValueMap = {\n  [Pre3dsDecisions.Decline]: 'Decline',\n  [Pre3dsDecisions.Challenge]: '3ds check',\n  [Pre3dsDecisions.NoPreference]: '3ds check',\n  [Pre3dsDecisions.FrictionlessLiability]: '3ds check',\n  [Pre3dsDecisions.TryExemptions]: 'Accept',\n} as const;\n\nexport const getPre3dsDecisionDisplayValueMap = (version: ThreeDSVersion) => {\n  return {\n    [ThreeDSVersion.One]: pre3ds1DecisionDisplayValueMap,\n    [ThreeDSVersion.Two]: pre3ds2DecisionDisplayValueMap,\n  }[version];\n};\n\nexport const postAuthDecisionDisplayValueMap: Record<\n  PostAuthDecisions,\n  string\n> = {\n  [PostAuthDecisions.Capture]: 'Capture',\n  [PostAuthDecisions.Flag]: 'Flag',\n  [PostAuthDecisions.Void]: 'Void',\n};\n\nexport const threeDS1DecisionFilter = (version: ThreeDSVersion | undefined) => (\n  decision: Pre3dsDecisions\n) => {\n  return version === '3DS1'\n    ? ![\n        Pre3dsDecisions.Challenge,\n        Pre3dsDecisions.FrictionlessLiability,\n      ].includes(decision)\n    : true;\n};\n\nexport type DecisionList = {\n  value: string;\n  label: string;\n}[];\n\nexport const getDecisionDisplayValue = (\n  key: PaymentProcessingDecisions,\n  version: ThreeDSVersion\n) => {\n  return (\n    getPre3dsDecisionDisplayValueMap(version)[key as Pre3dsDecisions] ||\n    postAuthDecisionDisplayValueMap[key as PostAuthDecisions] ||\n    key\n  );\n};\n\nexport const getPre3dsDecisionActions = (version: ThreeDSVersion) =>\n  convertDecisionsToActions(getPre3dsDecisionDisplayValueMap(version));\n\nexport const postAuthDecisionDescriptionMap: Record<\n  PostAuthDecisions,\n  string\n> = {\n  [PostAuthDecisions.Capture]: '',\n  [PostAuthDecisions.Flag]:\n    'Coming soon. Transaction will put on hold for manually review. You will be able to access flagged transactions and take decisions in the Payments tab. ',\n  [PostAuthDecisions.Void]: '',\n};\n\nexport const postAuthDecisionActions = convertDecisionsToActions(\n  postAuthDecisionDisplayValueMap\n);\n\ntype PaymentProcessingDecisionsMap = Record<PaymentProcessingDecisions, string>;\n\nexport const getDecisionMap = (\n  step: PaymentProcessingStep,\n  version: ThreeDSVersion\n) => {\n  switch (step) {\n    case PaymentProcessingStep.Pre3ds: {\n      if (version === ThreeDSVersion.One) {\n        return {\n          displayValues: pre3ds1DecisionDisplayValueMap as PaymentProcessingDecisionsMap,\n          descriptions: pre3dsDecisionDescriptionMap as PaymentProcessingDecisionsMap,\n        };\n      }\n      return {\n        displayValues: pre3ds2DecisionDisplayValueMap as PaymentProcessingDecisionsMap,\n        descriptions: pre3dsDecisionDescriptionMap as PaymentProcessingDecisionsMap,\n      };\n    }\n    case PaymentProcessingStep.PostAuth:\n      return {\n        displayValues: postAuthDecisionDisplayValueMap as PaymentProcessingDecisionsMap,\n        descriptions: postAuthDecisionDescriptionMap as PaymentProcessingDecisionsMap,\n      };\n  }\n};\n\nexport const decisionPriorityMap = {\n  [Pre3dsDecisions.Decline]: 1,\n  [Pre3dsDecisions.Challenge]: 2,\n  [Pre3dsDecisions.NoPreference]: 3,\n  [Pre3dsDecisions.FrictionlessLiability]: 4,\n  [Pre3dsDecisions.TryExemptions]: 5,\n  [PostAuthDecisions.Void]: 1,\n  [PostAuthDecisions.Flag]: 2,\n  [PostAuthDecisions.Capture]: 3,\n};\n\nexport const isPre3dsDecision = (decision: Pre3dsDecisions) => {\n  return pre3dsDecisionDescriptionMap[decision] !== undefined;\n};\n\nexport const decisionTypeMap: Record<\n  Pre3dsDecisions | PostAuthDecisions,\n  string\n> = {\n  [Pre3dsDecisions.Decline]: PaymentProcessingStep.Pre3ds,\n  [Pre3dsDecisions.Challenge]: PaymentProcessingStep.Pre3ds,\n  [Pre3dsDecisions.NoPreference]: PaymentProcessingStep.Pre3ds,\n  [Pre3dsDecisions.FrictionlessLiability]: PaymentProcessingStep.Pre3ds,\n  [Pre3dsDecisions.TryExemptions]: PaymentProcessingStep.Pre3ds,\n  [PostAuthDecisions.Void]: PaymentProcessingStep.PostAuth,\n  [PostAuthDecisions.Flag]: PaymentProcessingStep.PostAuth,\n  [PostAuthDecisions.Capture]: PaymentProcessingStep.PostAuth,\n};\n","import React from 'react';\nimport { TextField, ClickableElement } from '@cko/primitives';\nimport { IconActionSearch } from '@cko/icons';\nimport styled from 'styled-components';\nimport { space, SpaceProps } from 'styled-system';\n\nconst SearchIcon = styled(IconActionSearch)`\n  align-self: center;\n  margin: 0 8px 0 4px !important;\n`;\n\nconst ClearButton = styled(ClickableElement)<SpaceProps>`\n  font-size: 13px;\n  color: #1da177;\n  ${space}\n`;\n\nconst ClearPlaceHolder = styled.div`\n  width: 35px;\n`;\n\ninterface Props {\n  searchTerm: string | null;\n  setSearchTerm: React.Dispatch<React.SetStateAction<string | null>>;\n}\n\nconst SearchInput: React.FunctionComponent<Props> = ({\n  searchTerm,\n  setSearchTerm,\n}) => {\n  const prefix =\n    searchTerm && searchTerm.length > 0 ? (\n      <ClearButton\n        data-cy=\"searchClearButton\"\n        px={1}\n        onClick={() => {\n          setSearchTerm('');\n        }}\n      >\n        clear\n      </ClearButton>\n    ) : (\n      <ClearPlaceHolder />\n    );\n\n  return (\n    <TextField\n      style={{ fontSize: '13px' }}\n      prefix={(<SearchIcon />) as any}\n      suffix={prefix}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchTerm(e.target.value);\n      }}\n      value={searchTerm || ''}\n      data-cy=\"searchInput\"\n      placeholder=\"Search\"\n    />\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Flex, Box, Text } from '@cko/primitives';\nimport SearchInput from 'components/SearchInput';\nimport styled from 'styled-components';\n\nconst pluralise = (singular: string, plural: string, count: number) =>\n  count === 1 ? singular : plural;\n\nconst VerticalLine = styled(Box)`\n  margin: 0 12px;\n  height: 24px;\n  width: 1px;\n  background-color: ${(props) => props.theme.colors.baseLight};\n`;\n\ninterface Props {\n  searchTerm: string | null;\n  setSearchTerm: React.Dispatch<React.SetStateAction<string | null>>;\n  totalCount: number;\n}\n\nconst MasterDetailsSearchInput: React.FunctionComponent<Props> = ({\n  searchTerm,\n  setSearchTerm,\n  totalCount,\n}) => {\n  return (\n    <>\n      <Flex flexBasis=\"290px\">\n        <SearchInput searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\n      </Flex>\n      <VerticalLine></VerticalLine>\n      <Box style={{ lineHeight: '20px' }}>\n        <Text color=\"#7b8d93\" fontSize={0}>{`${Number(\n          totalCount\n        ).toLocaleString()} ${pluralise(\n          'result',\n          'results',\n          totalCount\n        )}`}</Text>\n      </Box>\n    </>\n  );\n};\n\nexport default MasterDetailsSearchInput;\n","import styled from 'styled-components';\nimport Grid from 'components/Grid';\nimport { Flex } from '@cko/primitives';\n\nconst MasterDetailsHeaderLayout = styled(Grid)`\n  grid-template-columns: auto auto;\n  padding: 8px 16px;\n  align-items: center;\n`;\n\nconst MasterDetailsHeaderLayoutLeft = styled(Flex)`\n  align-items: center;\n`;\nconst MasterDetailsHeaderLayoutRight = styled(Flex)`\n  align-items: center;\n  justify-self: end;\n`;\n\nexport {\n  MasterDetailsHeaderLayout,\n  MasterDetailsHeaderLayoutLeft,\n  MasterDetailsHeaderLayoutRight,\n};\n","import useHeaders from '../useRequestHeaders';\nimport { post } from 'api/utils';\nimport useAuth from 'hooks/useAuth';\nimport { AxiosRequestConfig } from 'axios';\nimport { useCallback } from 'react';\n\nconst usePostRequest = <RequestType, ResponseType = {}>(\n  url: string,\n  defaultOptions: AxiosRequestConfig = {}\n) => {\n  const createHeaders = useHeaders();\n  const auth = useAuth();\n\n  const request = useCallback(\n    async (\n      data: RequestType,\n      path?: string,\n      options: AxiosRequestConfig = defaultOptions\n    ) => {\n      const headers = await createHeaders();\n\n      const additionalPath = path ? `/${path}` : '';\n\n      try {\n        const response = await post<RequestType, ResponseType>(\n          `${url}${additionalPath}`,\n          data,\n          {\n            ...options,\n            headers: {\n              ...headers,\n              ...(options && options.headers),\n            },\n          }\n        );\n\n        return response.data;\n      } catch (error) {\n        if (error.response.status === 401) {\n          auth.logout();\n        }\n        throw error;\n      }\n    },\n    [auth, createHeaders, defaultOptions, url]\n  );\n\n  return request;\n};\n\nexport default usePostRequest;\n","import format from 'date-fns/format';\nimport { DateRange } from '@cko/calendar';\n\nconst DEFAULT_FORMAT = 'dd MMM yyyy - HH:mm';\nconst API_FORMAT = 'yyyy-MM-dd';\n\nconst getUTCDate = (dateString: string) => {\n  const date = new Date(dateString);\n\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n};\n\nexport const stringToDateDisplayValue = (\n  date: string,\n  dateFormater: string = DEFAULT_FORMAT\n) => format(getUTCDate(date), dateFormater);\n\nexport const formatDate = (date: Date, dateFormater: string = API_FORMAT) => {\n  return format(date, dateFormater);\n};\n\nexport const formatDateRange = (\n  dateRange: DateRange,\n  dateFormater: string = API_FORMAT\n) => {\n  let fromDate = null;\n  let toDate = null;\n  if (dateRange.from) {\n    fromDate = formatDate(dateRange.from, dateFormater);\n  }\n  if (dateRange.to) {\n    toDate = formatDate(dateRange.to, dateFormater);\n  }\n  return { fromDate, toDate };\n};\n","import React from 'react';\nimport { Box } from '@cko/primitives';\nimport { IconActionInfo } from '@cko/icons';\nimport TooltipButtonWrapper from 'components/TooltipButtonWrapper';\n\ninterface Props {\n  text: string;\n  enabled?: boolean;\n}\n\nconst InfoTooltip: React.FunctionComponent<Props> = ({\n  text,\n  enabled = true,\n}) => {\n  return (\n    <Box ml={1} display=\"inline-block\">\n      <TooltipButtonWrapper enabled={enabled} text={text}>\n        <IconActionInfo style={{ verticalAlign: 'bottom' }} />\n      </TooltipButtonWrapper>\n    </Box>\n  );\n};\n\nexport default InfoTooltip;\n","import React from 'react';\nimport { Box, SegmentedControl } from '@cko/primitives';\nimport {\n  ThreeDSVersion,\n  useThreeDSVersion,\n} from 'contexts/ThreeDSVersionContext';\n\nconst ThreeDSVersionToggle: React.FC = () => {\n  const { version, setVersion } = useThreeDSVersion();\n\n  return (\n    <Box bg=\"white\" width=\"300px\">\n      <SegmentedControl\n        options={[\n          { label: '3DS 1 view', value: '3DS1' },\n          { label: '3DS 2 view', value: '3DS2' },\n        ]}\n        onChange={(event) => setVersion(event.target.value as ThreeDSVersion)}\n        selectedValue={version}\n      />\n    </Box>\n  );\n};\n\nexport default ThreeDSVersionToggle;\n"],"sourceRoot":""}